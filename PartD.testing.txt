# CMPT332 - Group 14
# Phong Thanh Nguyen (David) - wdz468 - 11310824
# Woody Morrice - wam553 - 11071060

# Part D Test Plan and Test Results

# Test Plan
Testing pingpong is simple thanks to read() and its return value.
Since I know that it returns the number of bytes read, it will only
emit the appropriate success message if read() returns exactly 1.
Otherwise, it will emit an error message and quit. But just in case,
to make the results even more explicit, I added a print statement
after each read statement to print the byte that was read. This way
the test results can be checked directly against the code. Two buffers
are used to make the results even more explicit. The buffers will both
be initialized to "0", and after both read actions, should contain
"1". So the output of the test should look something like this:

buffer 1: 0
buffer 2: 0
<child pid>: received ping
buffer 1: 1
<parent pid>: received pong
buffer 2: 1

Note that the test print statements will be left in the code but
commented out for submission.


Test Results:

Output for Test 1:

xv6 kernel is booting

hart 1 starting
hart 2 starting
init: starting sh
$ pingpong
buffer 1: 0, buffer 2: 0
4: received ping
buffer 1: 1
3: received pong
buffer 2: 1

The test resulted in the expected output, so it appears that
pingpong works properly.
