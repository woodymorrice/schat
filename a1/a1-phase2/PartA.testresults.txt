# CMPT332 - Group 14
# Phong Thanh Nguyen (David) - wdz468 - 11310824
# Woody Morrice - wam553 - 11071060

# Tests 1-4
woody@woodpc UCRT64 ~/332/c332-g14
$ ./partA1.exe 1 1 0

woody@woodpc UCRT64 ~/332/c332-g14
$ ./partA1.exe 1 1 1
2 square calls, 0 ms

woody@woodpc UCRT64 ~/332/c332-g14
$ ./partA1.exe 1 1 10
65 square calls, 0 ms

woody@woodpc UCRT64 ~/332/c332-g14
$ ./partA1.exe 1 1 100
5150 square calls, 0 ms

# The first few tests seem to indicate that 
# the calculation of square calls is accurate.

# Test 5
# I wanted the program to be able to support at
# a size value of between 10000 and 50000, and found
# during implementation that the default stack size
# of 1 mb was not quite enough. I chose a stack size
# of 2 mb for the next stage of testing.

woody@woodpc UCRT64 ~/332/c332-g14
$ ./partA1.exe 1 20 50000

woody@woodpc UCRT64 ~/332/c332-g14
$ ./partA1.exe 1 20 25000
312537500 square calls, 3234 ms

woody@woodpc UCRT64 ~/332/c332-g14
$ ./partA1.exe 1 20 35000

woody@woodpc UCRT64 ~/332/c332-g14
$ ./partA1.exe 1 20 30000
450045000 square calls, 4718 ms

woody@woodpc UCRT64 ~/332/c332-g14
$ ./partA1.exe 1 20 32000
512048000 square calls, 5547 ms

woody@woodpc UCRT64 ~/332/c332-g14
$ ./partA1.exe 1 10 33000

woody@woodpc UCRT64 ~/332/c332-g14
$ ./partA1.exe 1 10 32768
536920064 square calls, 5750 ms

# So with a stack size of 2 mbs, size = 2^15 works.
# If I reduce the stack size to 1 mb:

woody@woodpc UCRT64 ~/332/c332-g14
$ ./partA1.exe 1 10 32768

# So I'll stick with at stack size of 2mb and set the
# max allowable value for size to be 32768.

# Tests 6 and 7
woody@woodpc UCRT64 ~/332/c332-g14
$ ./partA1.exe 1 0 32768

woody@woodpc UCRT64 ~/332/c332-g14
$ ./partA1.exe 1 1 32768
97405902 square calls, 1000 ms

woody@woodpc UCRT64 ~/332/c332-g14
$ ./partA1.exe 1 1 32768
96459104 square calls, 1000 ms

woody@woodpc UCRT64 ~/332/c332-g14
$ ./partA1.exe 1 1 32768
96320259 square calls, 1000 ms

# The number of calls to square done in 1 ms seem to
# fluctate quite a bit but I think that could be
# attributed to the background processes running on my
# pc.

# Test 8
woody@woodpc UCRT64 ~/332/c332-g14
$ ./partA1.exe 1 5 32768
471045470 square calls, 5000 ms

woody@woodpc UCRT64 ~/332/c332-g14
$ ./partA1.exe 1 10 32768
536920064 square calls, 5672 ms

woody@woodpc UCRT64 ~/332/c332-g14
$ ./partA1.exe 1 10 32768
536920064 square calls, 5609 ms

# It takes about 5.6 seconds to calculate number of square
# calls with the maximum allowable value for size, but I
# will have to test it with more threads to determine what
# the maximum deadline should be.

# Tests 9 and 10
woody@woodpc UCRT64 ~/332/c332-g14
$ ./partA1.exe 0 10 32768

woody@woodpc UCRT64 ~/332/c332-g14
$ ./partA1.exe 1 10 32768
536920064 square calls, 5656 ms

# It appears to function as expected with 0 or 1 threads,
# so now ill try so different values for threads that 
# will keep the hash table load factor around 0.75 and
# decide what level of performance is acceptable.

# Tests 11-13
woody@woodpc UCRT64 ~/332/c332-g14
$ ./partA1.exe 48 20 32768
60055319 square calls, 20110 ms
57122015 square calls, 20110 ms
96459104 square calls, 20110 ms
20323499 square calls, 20110 ms
99694259 square calls, 20110 ms
58476704 square calls, 20110 ms
86467824 square calls, 20110 ms
77569739 square calls, 20110 ms
89251479 square calls, 20110 ms
62457075 square calls, 20110 ms
97531560 square calls, 20110 ms
98301230 square calls, 20110 ms
57325277 square calls, 20110 ms
112597520 square calls, 20110 ms
90592529 square calls, 20110 ms
81300375 square calls, 20110 ms
55403600 square calls, 20110 ms
149256002 square calls, 20110 ms
59247054 square calls, 20110 ms
19000529 square calls, 20110 ms
29702777 square calls, 20110 ms
160841079 square calls, 20110 ms
69001877 square calls, 20110 ms
76106952 square calls, 20110 ms
42490370 square calls, 20110 ms
22562402 square calls, 20110 ms
65625695 square calls, 20110 ms
37311840 square calls, 20110 ms
73732295 square calls, 20110 ms
44269344 square calls, 20110 ms
99088002 square calls, 20110 ms
87814377 square calls, 20110 ms
53060450 square calls, 20110 ms
124102134 square calls, 20110 ms
58877525 square calls, 20110 ms
30392705 square calls, 20110 ms
177463379 square calls, 20110 ms
51293255 square calls, 20110 ms
37623474 square calls, 20110 ms
83198549 square calls, 20110 ms
32445539 square calls, 20110 ms
26386479 square calls, 20110 ms
62133377 square calls, 20110 ms
70146089 square calls, 20110 ms
40802060 square calls, 20110 ms
37104804 square calls, 20110 ms
70406910 square calls, 20110 ms
164557010 square calls, 20110 ms

woody@woodpc UCRT64 ~/332/c332-g14
$ ./partA1.exe 48 30 32768

woody@woodpc UCRT64 ~/332/c332-g14
$ ./partA1.exe 48 30 32768

woody@woodpc UCRT64 ~/332/c332-g14
$ ./partA1.exe 44 30 32768
132950970 square calls, 30078 ms
27073760 square calls, 30078 ms
200450252 square calls, 30078 ms
76663152 square calls, 30078 ms
156990339 square calls, 30078 ms
116716280 square calls, 30078 ms
136513025 square calls, 30078 ms
146932652 square calls, 30078 ms
101495627 square calls, 30078 ms
104105234 square calls, 30078 ms
103413770 square calls, 30078 ms
129919139 square calls, 30078 ms
157557875 square calls, 30078 ms
138220250 square calls, 30078 ms
96264749 square calls, 30078 ms
264304535 square calls, 30078 ms
62033090 square calls, 30078 ms
58498335 square calls, 30078 ms
92378027 square calls, 30078 ms
29036009 square calls, 30078 ms
50909094 square calls, 30078 ms
133032515 square calls, 30078 ms
185117660 square calls, 30078 ms
223227884 square calls, 30078 ms
42425865 square calls, 30078 ms
92065664 square calls, 30078 ms
131730795 square calls, 30078 ms
101082870 square calls, 30078 ms
151197354 square calls, 30078 ms
80537085 square calls, 30078 ms
112057934 square calls, 30078 ms
90754127 square calls, 30078 ms
129629150 square calls, 30078 ms
74560365 square calls, 30078 ms
164285000 square calls, 30078 ms
128007999 square calls, 30078 ms
114602229 square calls, 30078 ms
60121094 square calls, 30078 ms
122328260 square calls, 30078 ms
180129689 square calls, 30078 ms
98455527 square calls, 30078 ms
237020877 square calls, 30078 ms
160070777 square calls, 30078 ms
83754152 square calls, 30078 ms

# 48 threads would not produce output reliably,
# and 44 threads caused my console to freeze
# after output.

woody@woodpc UCRT64 ~/332/c332-g14
$ ./partA1.exe 32 60 32768
Segmentation fault

woody@woodpc UCRT64 ~/332/c332-g14
$ ./partA1.exe 24 60 32768
536920064 square calls, 20828 ms
Segmentation fault

woody@woodpc UCRT64 ~/332/c332-g14
$ vi square.c

woody@woodpc UCRT64 ~/332/c332-g14
$ ./partA1.exe 24 60 32768
Segmentation fault

woody@woodpc UCRT64 ~/332/c332-g14
$ ./partA1.exe 24 5 32768
95973584 square calls, 5016 ms
18147299 square calls, 5016 ms
68638185 square calls, 5016 ms
22596002 square calls, 5016 ms

woody@woodpc UCRT64 ~/332/c332-g14
$ ./partA1.exe 24 5 32768
57261050 square calls, 5031 ms
43678530 square calls, 5031 ms
29710485 square calls, 5031 ms
43725275 square calls, 5031 ms
24182534 square calls, 5031 ms
35908574 square calls, 5031 ms
59694200 square calls, 5031 ms
27221130 square calls, 5031 ms
24981845 square calls, 5031 ms

woody@woodpc UCRT64 ~/332/c332-g14
$ ./partA1.exe 24 5 32768
31106327 square calls, 5016 ms
75848085 square calls, 5016 ms
73453259 square calls, 5016 ms
32752370 square calls, 5016 ms
60044360 square calls, 5016 ms
82067265 square calls, 5016 ms
44797844 square calls, 5016 ms
65305305 square calls, 5016 ms
47829089 square calls, 5016 ms
101752244 square calls, 5016 ms
69649502 square calls, 5016 ms
16764944 square calls, 5016 ms
87801125 square calls, 5016 ms
39484940 square calls, 5016 ms
60175934 square calls, 5016 ms
82118519 square calls, 5016 ms
45510569 square calls, 5016 ms
70537502 square calls, 5016 ms
53204769 square calls, 5016 ms
43893764 square calls, 5016 ms
24671799 square calls, 5016 ms
24826580 square calls, 5016 ms
35359844 square calls, 5016 ms
40621590 square calls, 5016 ms

woody@woodpc UCRT64 ~/332/c332-g14
$ ./partA1.exe 24 5 32768
63410690 square calls, 5031 ms
30533204 square calls, 5031 ms

woody@woodpc UCRT64 ~/332/c332-g14
$ ./partA1.exe 16 5 32768
101481380 square calls, 5031 ms
91361402 square calls, 5031 ms
177293864 square calls, 5031 ms

woody@woodpc UCRT64 ~/332/c332-g14
$ ./partA1.exe 16 5 32768
48015099 square calls, 5015 ms
187608134 square calls, 5015 ms
68474252 square calls, 5015 ms
53680340 square calls, 5015 ms
111444984 square calls, 5015 ms
68603040 square calls, 5015 ms
199670135 square calls, 5015 ms
107142840 square calls, 5015 ms
58174290 square calls, 5015 ms

woody@woodpc UCRT64 ~/332/c332-g14
$ ./partA1.exe 8 5 32768
347464340 square calls, 5015 ms
191502234 square calls, 5015 ms
148290030 square calls, 5015 ms
134094875 square calls, 5015 ms
139086180 square calls, 5015 ms
367408277 square calls, 5015 ms
94057469 square calls, 5015 ms
351694980 square calls, 5015 ms

woody@woodpc UCRT64 ~/332/c332-g14
$ ./partA1.exe 8 5 32768
355417790 square calls, 5016 ms
371731010 square calls, 5016 ms
361361285 square calls, 5016 ms
129114414 square calls, 5016 ms
122187527 square calls, 5016 ms
64020269 square calls, 5016 ms
368520525 square calls, 5016 ms
215104910 square calls, 5016 ms

woody@woodpc UCRT64 ~/332/c332-g14
$ ./partA1.exe 8 30 32768
Segmentation fault

woody@woodpc UCRT64 ~/332/c332-g14
$ ./partA1.exe 8 15 32768
536920064 square calls, 9781 ms
536920064 square calls, 13828 ms
275995764 square calls, 15015 ms
320184164 square calls, 15015 ms
158322114 square calls, 15015 ms
187666250 square calls, 15015 ms
279483902 square calls, 15015 ms
534040220 square calls, 15015 ms

woody@woodpc UCRT64 ~/332/c332-g14
$ ./partA1.exe 8 15 32768
536920064 square calls, 8156 ms
166430889 square calls, 12781 ms
536920064 square calls, 12781 ms
Segmentation fault

woody@woodpc UCRT64 ~/332/c332-g14
$ ./partA1.exe 8 10 32768
536920064 square calls, 7719 ms
Segmentation fault

woody@woodpc UCRT64 ~/332/c332-g14
$ ./partA1.exe 8 10 32768
Segmentation fault

# My program started having a lot of issues at this point.
# Clearly it has some pretty glaring flaws in its implementation.
# I will need to test more and fix it but at this point I
# need to submit what I have because it will be due soon.
