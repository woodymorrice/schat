/* Group 14
 * Woody Morrice - wam553 - 11071060 */

332-style-guidelines-team14.txt

=======================
Coding Style Guidelines
=======================
Adapted from the QEMU Coding Style Guide, which can be found at:
https://qemu-project.gitlab.io/qemu/devel/style.html


Formatting and Style
--------------------

**Whitespace**

Indents are four spaces. Tabs are not used, except in Makefiles.
There should be no dangling white space at the end of any line.

**Multiline Indent**

In the case of if/else statements and while/for loops, secondary
lines should be aligned just after the opening parenthesis of the
first line:

if (a == 1 &&
    b == 2) {

In the case of a function, secondary lines should be aligned
similarly:

do_something(x, y,
             z);

Unless, for some reason, the primary line is exceedingly long,
in which case the secondary line should be indented 4 spaces
from the beginning of the primary line:

do_something(x, y,
    z);

**Line Width**

Lines should be 80 characters or less.

**Naming**

Variables and functions should generally be camelCase. Structs
should be PascalCase. Constants and Enum types should be
UPPERCASE.

**Variable Naming Conventions**

Variable names should be descriptive and 3 or more characters,
except counting variables in for loops, which are usually a
single character by convention.

**Function Naming Conventions**

Function names should be descriptive, and functions from the same
place, or operating on the same files or data structures, should
have consistent prefixes to indicate they are related.

**Block Structure**

Every indented statement is braced; even if the block contains
just one statement. The opening brace is on the line that contains
the control flow statement that introduces the new block, the
closing brace is on the same line as the else keyword, or on a
line by itself if there is no else keyword:

if (a == 5) {
    printf("a was 5.\n");
} else if (a == 6) {
    printf("a was 6.\n");
} else {
    printf("a was something else entirely.\n");
}

Note that 'else if' is considered a single statement; otherwise a
long if/ else if/.../else sequence would need an indent for every
else statement.

The opening brace for a function should be placed on the same line
as the function header:

void a_function(void) {
    do_something();
}

**Declarations**

Mixed declarations are generally not allowed because ISO C90
forbids it. Declarations should be always be at the beginning of 
blocks.

**Conditional Statements**

When comparing a variable for (in)equality with a constant, list the
constant on the right:

if (a == 1) {
    do_something();
}

**Comment Style**

All comments must be in the traditional C-style: /* */
Multiline comment blocks should have a row of stars on the left,
and are not required to have the initial /* and terminating */ on
their own lines:

/* This comment style
 * is permissible */

**Include Directives**

System headers should be included before local headers:

#include <...>
#include "..."

